# The land-command workflow runs ghstack land on the PR
#
# This workflow is triggered by leaving a "/land" comment on
# a pull request. If the required preconditions are met, it will
# merge a stack of PRs that includes the current one as well as
# all the PRs underneath it in the stack.
#
# Conditions are checked through the "ghstack-perm-check.py"
# python script defined in the .github/workflows/scripts folder.
#
# Condition for the "/land" command are:
# - the issuer is a maintainer (this is enforced by the "slash"
#   workflow, which verifies permissions before dispatching)
# - the current PR is in the format generated by ghstack
# - the current PR and all those underneath in the stack have no
#   failing check (this is limited to the GitHub check API, which
#   is used by GitHub Actions, it does not enforce commit statuses)
# - the current PR is approved
#
# The PRs are merged by a bot account "fms-cibot" which has push
# permissions on the repo.

name: Land ghstack PRs
on:
  repository_dispatch:
    types: [land-command]

jobs:
  ghstack_land:
    name: ghstack Land
    runs-on: ubuntu-latest
    steps:
    - name: Show Environment Variables
      run: env
    - name: Show Github Object
      run: |
        cat <<'EOF'
        ${{ toJson(github) }}
        EOF
    - name: Show Github Event Path Json
      run: 'cat $GITHUB_EVENT_PATH || true'
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.LAND_TOKEN }}
        fetch-depth: '0'
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Check Current CI Status
      run: |
        pip install requests ghstack
        .github/workflows/scripts/ghstack-perm-check.py <<'EOF'
        ${{ toJson(github) }}
        EOF
      env:
        GITHUB_TOKEN: ${{ secrets.LAND_TOKEN }}
    - name: Land It!
      run: |
        # TODO: update the bot e-mail once a correct e-mail is available
        git config --global user.email "foundation-model-stack@googlegroups.com"
        git config --global user.name "Foundation Model Stack CI Bot"
        cat <<EOF > ~/.ghstackrc
        [ghstack]
        github_url = github.com
        github_oauth = $GITHUB_TOKEN
        github_username = fms-cibot
        remote_name = origin
        EOF
        ghstack land "${{ github.event.client_payload.pull_request.html_url }}"
      env:
        GITHUB_TOKEN: ${{ secrets.LAND_TOKEN }}
